swagger: '2.0'
info:
  title: ACME Company API
  description: ACME Company API to manage stores, orders, and payments. You can find out more about this API at the [Github Project Repo:https://github.com/tonykingnz/RestAPIACMECompany](https://github.com/tonykingnz/RestAPIACMECompany)
  
  version: '3.5'
consumes:
  - application/json
produces:
  - application/json
  
paths:
  /stores:
    get:
      operationId: app.list
      parameters:
        - in: query
          name: storeAddress
          type: string
      responses:
        '200':
          description: Return stores
          schema:
            type: array
            items:
                $ref: '#/definitions/ResumeStore'
      summary: List Stores
      tags:
        - 1. Store - List and Create
    post:
      operationId: app.create
      parameters:
        - in: body
          name: store
          required: true
          schema:
            $ref: '#/definitions/Store'
      responses:
        '201':
          description: Store created, plus id in response body
          schema:
            type: integer
            format: int32
        '400':
          description: Store already exist
      summary: Create a Store
      tags:
        - 1. Store - List and Create
      x-codegen-request-body-name: store
  '/stores/{storeId}':
    get:
      operationId: app.detail
      parameters:
        - format: int32
          in: path
          name: storeId
          required: true
          type: integer
      responses:
        '200':
          description: Return store
          schema:
            $ref: '#/definitions/Store'
        '404':
          description: Store does not exist
      summary: Detail of a Store
      tags:
        - '2. Store - Detail, Update and Remove'
    put:
      operationId: app.update
      parameters:
        - format: int32
          in: path
          name: storeId
          required: true
          type: integer
        - in: body
          name: store
          required: false
          schema:
            $ref: '#/definitions/Store'
      responses:
        '200':
          description: Store updated
        '404':
          description: Store does not exist
      summary: Update a Store
      tags:
        - '2. Store - Detail, Update and Remove'
      x-codegen-request-body-name: store
    delete:
      operationId: app.remove
      parameters:
        - format: int32
          in: path
          name: storeId
          required: true
          type: integer
      responses:
        '204':
          description: Store was deleted
        '404':
          description: Store does not exist
      summary: Remove a Store
      tags:
        - '2. Store - Detail, Update and Remove'
  /orders :
    get:
      operationId: app.listOrder
      parameters:
        - format: int32
          in: query
          name: status
          type: string
      responses:
        '200':
          description: List with orders, can be filtred by status
          schema:
            type: array
            items:
              $ref: '#/definitions/ResumeOrder'
        '404':
          description: Order does not exist
      summary: List of Orders
      tags:
        - '3. Order - Create, List, Detail and Update'
    post:
      operationId: app.createOrder
      parameters:
        - in: body
          name: order
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: Order created, plus id
          schema:
            type: integer
            format: int32
        '404':
          description: Order already exist
      summary: Create an Order
      tags:
        - '3. Order - Create, List, Detail and Update'
      x-codegen-request-body-name: store
  /orders/{orderId} :
    get:
        operationId: app.detailOrder
        parameters:
          - format: int32
            in: path
            name: orderId
            required: true
            type: integer
        responses:
          '200':
            description: Retrieve order by ID
            schema:
              $ref: '#/definitions/Order'
          '404':
            description: Order does not exist
        summary: Detail of an Order
        tags:
          - '3. Order - Create, List, Detail and Update'
    put:
      operationId: app.updateOrder
      parameters:
        - format: int32
          in: path
          name: orderId
          required: true
          type: integer
        - in: body
          name: address
          required: true
          schema:
            description: Address of the order
            example: '37.3327° N, 122.0053° W'
            minLength: 1
            type: string
      responses:
        '200':
          description: Order address updated
        '404':
          description: Order id invalid
      summary: Update an order address
      tags:
        - '3. Order - Create, List, Detail and Update'
      x-codegen-request-body-name: order
      
  /orders/{orderId}/refund :
    put:
        operationId: app.refund
        parameters:
          - format: int32
            in: path
            name: orderId
            required: true
            type: integer
        responses:
          '200':
            description: Order refunded
          '404':
            description: Refund limit days passed or another problem occured
        summary: Refund Order
        tags:
          - '4. Order - Refund Order or Order Item'
        x-codegen-request-body-name: order
  
  /orders/{orderId}/refund/item :
    put:
        operationId: app.refundItem
        parameters:
          - format: int32
            in: path
            name: orderId
            required: true
            type: integer
          - in: body
            name: orderItemsID
            required: true
            schema:
              type: array
              items:
                type: integer
                format: int32
              uniqueItems: true
              minItems: 1
              example: [1, 2, 3, 4]
        responses:
          '200':
            description: Order item refunded
          '404':
            description: Refund limit days passed or another problem occured
        summary: Refund Order Item
        tags:
          - '4. Order - Refund Order or Order Item'
        x-codegen-request-body-name: order
      
  /orders/{orderId}/payments :
    get:
        operationId: app.paymentInformation
        parameters:
          - format: int32
            in: path
            name: orderId
            required: true
            type: integer
        responses:
          '200':
            description: Payment for the order that this is inside.
            schema:
              $ref: '#/definitions/Payment'
          '404':
            description: Payment not yet created
        summary: Detail of a Payment
        tags:
          - '5. Payment - Create and Detail'
    post:
      operationId: app.createPayment
      parameters:
        - format: int32
          in: path
          name: orderId
          required: true
          type: integer
        - in: body
          name: payment
          required: true
          schema:
            $ref: '#/definitions/Payment'
      responses:
        '200':
          description: Payment created
        '404':
          description: Payment already exist
        '405':
          description: Some paramter is out of format. Check credit card numbers and everything else.
      summary: Create a Payment
      tags:
        - '5. Payment - Create and Detail'
      x-codegen-request-body-name: payment
definitions:
  ResumeStore:
    properties:
      id:
        description: store identifier
        format: int32
        type: integer
      name:
        description: Name of the store
        example: Apple Park Visitor Center
        maxLength: 100
        minLength: 1
        type: string
    type: object
  Store:
    properties:
      address:
        description: Coordinates of the store
        example: '37.3327° N, 122.0053° W'
        minLength: 1
        type: string
      created:
        description: Creation time
        example: '2017-11-17T13:49:51.230Z'
        format: date-time
        type: string
      id:
        description: store identifier
        format: int32
        type: integer
        readOnly: true
      name:
        description: Name of the store
        example: Apple Park Visitor Center
        maxLength: 100
        minLength: 1
        type: string
      tags:
        description: Custom tags
        items:
          type: string
        type: array
    required:
      - name
    type: object
  Order:
    properties:
      address:
        description: Address of the order
        example: '37.3327° N, 122.0053° W'
        minLength: 1
        type: string
      confirmationDate:
        description: Confirmation date of the order
        example: '2017-11-17 13:49:51.230860' #maybe use the confirmation date as the date order was created
        type: string
        readOnly: true
      id:
        description: store identifier
        format: int32
        type: integer
        readOnly: true
      status:
        description: OrderStatus
        example: PENDING
        maxLength: 100
        minLength: 1
        type: string
        enum:
          - PENDING
          - EXPIRED
          - SUBMITED
          - CANCELED
        readOnly: true
      orderItems:
        type: array
        items:
          type: object
          properties:
            quantity:
              type: integer
              example: 2
            description:
              type: string
              example: 'iPhone 11 Pro Max 512GB Gold'
            unitPrice:
              type: number
              format: float
              example: 1449.01
            itemID:
              type: integer
              example: 7
              format: int32
              readOnly: true
      paid:
        type: boolean
        example: False
        description: 'Order is paid'
        readOnly: true #should be readOnly?
  ResumeOrder:
    properties:
      address:
        description: Address of the order
        example: '37.3327° N, 122.0053° W'
        minLength: 1
        type: string
      confirmationDate:
        description: Confirmation date of the order
        example: '2017-11-17 13:49:51.230860' #maybe use the confirmation date as the date order was created
        type: string
        readOnly: true
      id:
        description: store identifier
        format: int32
        type: integer
        readOnly: true
      status:
        description: OrderStatus
        example: PENDING
        maxLength: 100
        minLength: 1
        type: string
        enum:
          - PENDING
          - EXPIRED
          - SUBMITED
          - CANCELED
        readOnly: true
      paid:
        type: boolean
        example: False
        description: 'Order is paid'
        readOnly: true #should be readOnly?
  Payment:
    properties:
      paymentDate:
        description: Payment date of the order
        example: '2017-11-17 13:50:25.230860'
        type: string
        readOnly: true
      creditCardNumber:
        description: Number of the Credit Card
        pattern: '^\d{4} \d{4} \d{4} \d{4}$'
        example: '5176 0400 0002 5018'
        type: string
      orderId:
        description: Order id for payment
        type: integer
        readOnly: true
      status:
        description: Order Status
        example: SUBMITED
        maxLength: 50
        minLength: 1
        type: string
        readOnly: true
      paid:
        type: boolean
        example: True
        description: 'Order is paid'
        readOnly: true #should be readOnly?
        
x-components:
  parameters:
    storeId:
      in: path
      name: storeId
      required: true
      schema:
        format: int32
        type: integer
  requestBodies:
    storeBody:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Store'
      required: false

