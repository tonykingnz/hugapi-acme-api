openapi: 3.0.1
info:
  title: ACME WORKS API - STUDY CASE
  description: '[MVP] ACME Company B2C API'
  termsOfService: http://acme.io/api/terms/
  contact:
    email: apiteam@acme.io
  version: 0.1.0
externalDocs:
  description: Find out more about the API
  url: http://acme.io/api/
servers:
- url: http://localhost:8000/
tags:
- name: store
  description: management of store profile
- name: store items
  description: management of store items - products or/and services
- name: store orders
  description: management of store orders
paths:
  /stores:
    get:
      tags:
      - store
      summary: List Stores
      operationId: listStore
      parameters:
      - name: storeId
        in: query
        description: Store ID
        schema:
          type: integer
          format: int64
        required: false
      - name: name
        in: query
        description: Store name
        schema:
          type: string
        required: false
      - name: address
        in: query
        description: Store address
        schema:
          type: string
        required: false
      - name: pageSize
        in: query
        required: true
        description: How many store to show each page
        schema:
          type: integer
          format: int64
          default: 20
      - name: pageIndex
        in: query
        required: true
        description: Position of what page you are.
        schema:
          type: integer
          format: int64
          default: 0
      - name: orderBy
        in: query
        description: Order the result by ID, name or address and arrange by decresing (desc) and crecenting (asc).
        required: true
        schema:
          type: string
          enum: [storeId asc, storeId desc, name asc, name desc, address asc, address desc]
      responses:
        200:
          description: List of stores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorePage'
        400:
          description: bad request
          content:
            application/json:
              schema:
                type: string
                description: Error message
    post:
      tags:
      - store
      summary: Add new Store
      operationId: createStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeStore'
        required: true
      responses:
        201:
          description: Store created
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: Store ID
        400:
          description: Store not created
          content:
            application/json:
              schema:
                type: string
                description: Error message
      x-codegen-request-body-name: body
      
  /stores/{storeId}:
    put:
      tags:
      - store
      summary: Update Store profile
      operationId: app.updateStore
      parameters:
      - name: storeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeStore'
        required: true
      responses:
        201:
          description: Store created
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: Store ID
        400:
          description: Store not updated
          content:
            application/json:
              schema:
                type: string
                description: Error message
      x-codegen-request-body-name: body
      
  /stores/{storeId}/items:
    get:
      tags:
      - store items
      summary: list store items
      operationId: app.listStoreItems
      parameters:
      - name: storeId
        in: path
        required: true
        schema:
          type: integer
          format: int54
      - name: categoryTerm
        in: query
        required: true
        schema:
          type: string
          enum:
          - service
          - product
      - name: unitTerm
        in: query
        schema:
          type: string
      - name: nameTerm
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        required: true
        schema:
          type: integer
          format: int64
          default: 20
      - name: pageIndex
        in: query
        required: true
        schema:
          type: integer
          format: int64
          default: 1
      responses:
        200:
          description: list of items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreItemPage'
    post:
      tags:
      - store items
      summary: create store item - product/service
      operationId: app.addStoreItem
      parameters:
      - name: storeId
        in: path
        required: true
        schema:
          type: integer
          format: int54
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoreItem'
        required: true
      responses:
        201:
          description: Store Item created
          content: {}
        400:
          description: Store not created
          content:
            application/json:
              schema:
                type: string
                description: Error message
      x-codegen-request-body-name: body
  /stores/{storeId}/orders:
    post:
      tags:
      - store orders
      summary: Create an store order for possible payment
      operationId: app.addStoreOrder
      parameters:
      - name: storeId
        in: path
        required: true
        schema:
          type: integer
          format: int54
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreOrder'
        required: true
      responses:
        201:
          description: Order created
          content:
            application/json:
              schema:
                type: integer
                format: int32
        400:
          description: Store not created
          content:
            application/json:
              schema:
                type: string
                description: Error message
      x-codegen-request-body-name: body
components:
  schemas:
    Store:
      type: object
      properties:
        storeId:
          type: integer
          format: int64
          example: 2023443219
        name:
          type: string
          example: ACME Peba Master ltda
        address:
          type: string
          example: rua bolinha peba, nº 100, uberlundia MG
    ResumeStore:
      type: object
      properties:
        name:
          type: string
          example: ACME Peba Master ltda
        address:
          type: string
          example: rua bolinha peba, nº 100, uberlundia MG
    StorePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Store'
        lastPage:
          type: boolean
          example: false
        pageSize:
          type: integer
          format: int32
          example: 20
        pageIndex:
          type: integer
          format: int32
          example: 1
    StoreItem:
      type: object
      properties:
        storeItemId:
          type: integer
          format: int64
          example: 10987645634
        name:
          type: string
          example: carne bolinha bovina
        unit:
          type: string
          example: kg
        image:
          type: string
          description: image hash
          example: AC98BFE120D
        category:
          type: string
          enum:
          - product
          - service
        lastPrice:
          type: number
          example: 20.99
    CreateStoreItem:
      type: object
      properties:
        name:
          type: string
          example: carne bolinha bovina
        unit:
          type: string
          example: kg
        image:
          type: string
          description: image hash
          example: AC98BFE120D
        category:
          type: string
          enum:
          - product
          - service
        lastPrice:
          type: number
          example: 20.99
    StoreItemPage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/StoreItem'
        lastPage:
          type: boolean
          example: false
        pageSize:
          type: integer
          format: int32
          example: 20
        pageIndex:
          type: integer
          format: int32
          example: 1
    StoreOrderItem:
      type: object
      properties:
        storeItemPricingId:
          type: number
          example: 10.89
        quantity:
          type: number
          example: 0.12
        unit:
          type: string
          example: kg
    StoreOrder:
      type: object
      properties:
        storeOrderId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        confirmationDate:
          type: string
          example: '2004-10-19 10:23:56+02'
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
        item:
          type: string
          $ref: '#/components/schemas/StoreOrderItem'
  parameters:
    pageSizeParam:
      name: pageSize
      in: query
      required: true
      schema:
        type: integer
        format: int64
        default: 20
    pageIndexParam:
      name: pageIndex
      in: query
      required: true
      schema:
        type: integer
        format: int64
        default: 1
    nameTerm:
      name: nameTerm
      in: query
      schema:
        type: string
    storeIdParam:
      name: storeId
      in: path
      required: true
      schema:
        type: integer
        format: int54
    addressTerm:
      name: addresTerm
      in: query
      schema:
        type: string
    orderByParam:
      name: orderBy
      in: query
      description: |
        Syntax: [field\*Term only\*, fieldId] [asc, desc]. Example: field desc"
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
